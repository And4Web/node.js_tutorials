notes from: https://nodejs.dev/en/api/v19/events/

(1) Much of the Node.js core API is built around an idiomatic asynchronous event-driven architecture in which certain kinds of objects (called "emitters") emit named events that cause Function objects ("listeners") to be called.

(2) For instance: a net.Server object emits an event each time a peer connects to it; a fs.ReadStream emits an event when the file is opened; a stream emits an event whenever data is available to be read.

(3) All objects that emit events are instances of the EventEmitter class.

(4) These objects expose an eventEmitter.on() function that allows one or more functions to be attached to named events emitted by the object.

(5) When the EventEmitter object emits an event, all of the functions attached to that specific event are called synchronously. Any values returned by the called listeners are ignored and discarded.

(6) Passing arguments and 'this' to listeners:
  The eventEmitter.emit() method allows an arbitrary set of arguments to be passed to the listener functions. Keep in mind that when an ordinary listener function is called, the standard this keyword is intentionally set to reference the EventEmitter instance to which the listener is attached.

(7) 